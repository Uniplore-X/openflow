FROM node:lts-alpine as builder
# --omit=optional
RUN npm install gulp typescript browserify tsify -g

#当前处于openflow父目录下，openflow-api与openflow处于同级目录
#构建前，请使用未install的项目目录

#构建openflow-api
RUN mkdir /openflow-api
WORKDIR /openflow-api
COPY openflow-api/package*.json /openflow-api/
RUN yarn install
COPY openflow-api/ /openflow-api/
RUN yarn build
RUN yarn link


#构建openflow
RUN mkdir /app
WORKDIR /app
COPY openflow/package*.json /app/
RUN yarn link "@openiap/openflow-api"
RUN yarn install
COPY openflow/ /app/
RUN gulp sass

RUN gulp
RUN tsc --build OpenFlow/tsconfig.json

FROM node:lts-alpine
ENV NODE_ENV=production
RUN apk add --no-cache bash
EXPOSE 3000
EXPOSE 5858
WORKDIR /data
COPY --from=builder /app/package*.json .
COPY --from=builder /app/dist/ .
# RUN npm install --omit=dev 
# RUN npm install mongodb
RUN npm install --omit=dev --production

# ENTRYPOINT ["/usr/local/bin/node", "index.js"]
ENTRYPOINT ["/usr/local/bin/node", "--inspect=0.0.0.0:5858", "index.js"]

# docker buildx build --platform linux/amd64 -t openiap/openflow:edge . --push
# docker buildx build --platform linux/amd64 -t openiap/openflow:dev . --push